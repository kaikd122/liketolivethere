generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Review {
  id        String   @id @default(cuid())
  title     String
  body      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  userId    String   @map("user_id")
  user      User     @relation(fields: [userId], references: [id])
  latitude  Decimal
  longitude Decimal
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  reviews       Review[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model uk_towns {
  id                    Int                      @id
  name                  String?                  @db.VarChar(45)
  county                String?                  @db.VarChar(32)
  country               String?                  @db.VarChar(16)
  grid_reference        String?                  @db.VarChar(8)
  easting               Int?
  northing              Int?
  latitude              Decimal?                 @db.Decimal(8, 5)
  longitude             Decimal?                 @db.Decimal(8, 5)
  elevation             Int?
  postcode_sector       String?                  @db.VarChar(6)
  local_government_area String?                  @db.VarChar(44)
  nuts_region           String?                  @db.VarChar(24)
  type                  String?                  @db.VarChar(13)
  geom                  Unsupported("geometry")?
}
